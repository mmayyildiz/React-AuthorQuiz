{"ast":null,"code":"var _jsxFileName = \"/Users/meltemayyildiz/jsdev/authorquiz/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AuthorQuiz from './AuthorQuiz';\nimport * as serviceWorker from './serviceWorker';\nimport { shuffle, sample } from 'underscore';\nimport { BrowserRouter, Route, withRouter } from 'react-router-dom'; //npm install react-router-dom\n\nimport AddAuthorForm from './AddAuthorForm';\nconst authors = [{\n  name: 'Mark Twain',\n  imageUrl: 'images/authors/marktwain.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['The Adventures of Huckleberry Finn', 'Life on the Missisippi', 'Roughing it']\n}, {\n  name: 'Joseph Conrad',\n  imageUrl: 'images/authors/marktwain.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['Hearth of Darkness']\n}, {\n  name: 'Stephen King',\n  imageUrl: 'images/authors/marktwain.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['The Shining', 'IT']\n}, {\n  name: 'Charles Dickens',\n  imageUrl: 'images/authors/marktwain.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['David Cooperfield', 'A Tale of Two Cities']\n}, {\n  name: 'William Shakespare',\n  imageUrl: 'images/authors/williamshakespare.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['Hamlet', 'Macbeth', 'Romeo and Juliet']\n}];\n\nfunction getTurnData(authors) {\n  // concatenating each author's books into the larger set\n  const allBooks = authors.reduce(function (p, c, i) {\n    return p.concat(c.books);\n  }, []); // ilk 4'端n端 al\n\n  const fourRandomBooks = shuffle(allBooks).slice(0, 4);\n  const answer = sample(fourRandomBooks);\n  return {\n    books: fourRandomBooks,\n    author: authors.find(author => author.books.some(title => title === answer))\n  };\n}\n\nfunction resetState() {\n  return {\n    turnData: getTurnData(authors),\n    highlight: ''\n  };\n}\n\n; // const a assign edilemez\n\nlet state = resetState();\n\nfunction onAnswerSelected(answer) {\n  const isCorrect = state.turnData.author.books.some(book => book === answer);\n  state.highlight = isCorrect ? 'correct' : 'wrong';\n  render();\n}\n\nfunction App() {\n  return React.createElement(AuthorQuiz, Object.assign({}, state, {\n    onAnswerSelected: onAnswerSelected,\n    onContinue: () => {\n      state = resetState();\n      render();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }));\n}\n\nconst AuthorWrapper = withRouter(({\n  history\n}) => React.createElement(AddAuthorForm, {\n  onAddAuthor: author => {\n    authors.push(author);\n    history.push('/');\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}));\n\nfunction render() {\n  // BrowserRouter component gives us ability to introduce route components\n  // <React.Fragment> : added due to BrowserRouter only has one child element\n  // grouping react elements under a single parent but using a component that has no DOM representation\n  // this <React.Fragment> component doesn't add anything to the DOM\n  ReactDOM.render(React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: App,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/add\",\n    component: AuthorWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }))), document.getElementById('root'));\n}\n\nrender();\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/meltemayyildiz/jsdev/authorquiz/src/index.js"],"names":["React","ReactDOM","AuthorQuiz","serviceWorker","shuffle","sample","BrowserRouter","Route","withRouter","AddAuthorForm","authors","name","imageUrl","imageSource","books","getTurnData","allBooks","reduce","p","c","i","concat","fourRandomBooks","slice","answer","author","find","some","title","resetState","turnData","highlight","state","onAnswerSelected","isCorrect","book","render","App","AuthorWrapper","history","push","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AuthorQuiz from './AuthorQuiz';\nimport * as serviceWorker from './serviceWorker';\nimport {shuffle, sample} from 'underscore';\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom';\n//npm install react-router-dom\n\nimport AddAuthorForm from './AddAuthorForm';\n\nconst authors = [\n    {\n        name : 'Mark Twain',\n        imageUrl: 'images/authors/marktwain.jpg',\n        imageSource:'Wikimedia Commons',\n        books: ['The Adventures of Huckleberry Finn',\n                'Life on the Missisippi',\n                'Roughing it']\n    },\n    {\n        name : 'Joseph Conrad',\n        imageUrl: 'images/authors/marktwain.jpg',\n        imageSource:'Wikimedia Commons',\n        books: ['Hearth of Darkness']   \n    },\n    {\n        name : 'Stephen King',\n        imageUrl: 'images/authors/marktwain.jpg',\n        imageSource:'Wikimedia Commons',\n        books: ['The Shining', 'IT']   \n    },\n    {\n        name : 'Charles Dickens',\n        imageUrl: 'images/authors/marktwain.jpg',\n        imageSource:'Wikimedia Commons',\n        books: ['David Cooperfield', 'A Tale of Two Cities']   \n    },\n    {\n        name : 'William Shakespare',\n        imageUrl: 'images/authors/williamshakespare.jpg',\n        imageSource:'Wikimedia Commons',\n        books: ['Hamlet', 'Macbeth', 'Romeo and Juliet']   \n    },\n\n    //npm install underscore\n];\n\nfunction getTurnData(authors){\n    // concatenating each author's books into the larger set\n   const allBooks = authors.reduce(function(p, c, i){\n       return p.concat(c.books);\n   }, []);\n\n   // ilk 4'端n端 al\n   const fourRandomBooks = shuffle(allBooks).slice(0,4);\n   const answer = sample(fourRandomBooks);\n\n   return{\n       books: fourRandomBooks,\n       author: authors.find((author) => \n           author.books.some((title) => \n                title === answer))\n   }\n}\n\nfunction resetState(){\n    return{\n    turnData: getTurnData(authors),\n    highlight: ''}\n};\n\n// const a assign edilemez\nlet state = resetState();\n\nfunction onAnswerSelected(answer){\n   const isCorrect = state.turnData.author.books.some((book) => book === answer);\n   state.highlight = isCorrect ? 'correct' : 'wrong';\n   render();\n}\n\nfunction App(){\n    return <AuthorQuiz {...state} \n      onAnswerSelected={onAnswerSelected}\n      onContinue={() => {\n          state = resetState();\n          render();\n      }}/>;\n}\n\n\nconst AuthorWrapper = withRouter(({history}) => \n     <AddAuthorForm onAddAuthor={(author) => {\n       authors.push(author);\n       history.push('/');\n   }}/>\n);\n\n\nfunction render(){\n    // BrowserRouter component gives us ability to introduce route components\n    // <React.Fragment> : added due to BrowserRouter only has one child element\n    // grouping react elements under a single parent but using a component that has no DOM representation\n    // this <React.Fragment> component doesn't add anything to the DOM\n  ReactDOM.render(\n  <BrowserRouter>\n    <React.Fragment>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/add\" component={AuthorWrapper}/>\n    </React.Fragment>\n  </BrowserRouter>, document.getElementById('root'));\n}\n\nrender();\n\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}
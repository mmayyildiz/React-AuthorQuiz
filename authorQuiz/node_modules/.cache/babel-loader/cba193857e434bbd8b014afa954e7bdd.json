{"ast":null,"code":"var _jsxFileName = \"/Users/meltemayyildiz/jsdev/authorquiz/src/AddAuthorForm.js\";\nimport React from 'react';\nimport \"./AddAuthorForm.css\"; // and the webpack setup in createReactApp will pick up that CSS import, do some magic, and make it all work\n\nclass AuthorForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      imageUrl: ''\n    };\n  }\n\n  render() {\n    return;\n    React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AddAuthorForm__input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"AddAuthorForm__input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"imageUrl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Image URL\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"imageUrl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })));\n  }\n\n} // for is reserved js word, so htmlFor is used in jsx\n\n\nfunction AddAuthorForm({\n  match\n}) {\n  return React.createElement(\"div\", {\n    className: \"AddAuthorForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Add Author\"), React.createElement(AuthorForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n}\n\nexport default AddAuthorForm;","map":{"version":3,"sources":["/Users/meltemayyildiz/jsdev/authorquiz/src/AddAuthorForm.js"],"names":["React","AuthorForm","Component","constructor","props","state","name","imageUrl","render","AddAuthorForm","match"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP,C,CACA;;AAGA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAwC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAG,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAEDC,EAAAA,MAAM,GAAE;AACP;AACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACO;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADP,EAKO;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALP;AAUH;;AAtBmC,C,CA0BxC;;;AACA,SAASC,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAA+B;AAC3B,SAAO;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAAP;AAIH;;AAED,eAAeD,aAAf","sourcesContent":["import React from 'react';\nimport \"./AddAuthorForm.css\";\n// and the webpack setup in createReactApp will pick up that CSS import, do some magic, and make it all work\n\n\nclass AuthorForm extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            name : '',\n            imageUrl: ''\n        }\n    }\n\n    render(){\n     return \n        <form>\n               <div className=\"AddAuthorForm__input\">\n                   <label htmlFor=\"name\">Name</label>\n                   <input type=\"text\" name=\"name\"/>\n               </div>\n               <div className=\"AddAuthorForm__input\">\n                   <label htmlFor=\"imageUrl\">Image URL</label>\n                   <input type=\"text\" name=\"imageUrl\"/>\n               </div>\n           </form>;\n    }\n}\n\n\n// for is reserved js word, so htmlFor is used in jsx\nfunction AddAuthorForm({match}){\n    return <div className=\"AddAuthorForm\">\n           <h1>Add Author</h1>\n           <AuthorForm />\n        </div>;\n}\n\nexport default AddAuthorForm;"]},"metadata":{},"sourceType":"module"}
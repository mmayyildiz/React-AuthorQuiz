{"ast":null,"code":"var _jsxFileName = \"/Users/meltemayyildiz/jsdev/authorquiz/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AuthorQuiz from './AuthorQuiz';\nimport * as serviceWorker from './serviceWorker';\nimport { shuffle, sample } from 'underscore';\nimport { BrowserRouter, Route, withRouter } from 'react-router-dom';\nimport * as Redux from 'redux';\nimport * as ReactRedux from 'react-redux'; // npm install redux react-redux\n\nimport AddAuthorForm from './AddAuthorForm';\nconst authors = [{\n  name: 'Mark Twain',\n  imageUrl: 'images/authors/marktwain.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['The Adventures of Huckleberry Finn', 'Life on the Missisippi', 'Roughing it']\n}, {\n  name: 'Joseph Conrad',\n  imageUrl: 'images/authors/marktwain.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['Hearth of Darkness']\n}, {\n  name: 'Stephen King',\n  imageUrl: 'images/authors/marktwain.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['The Shining', 'IT']\n}, {\n  name: 'Charles Dickens',\n  imageUrl: 'images/authors/marktwain.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['David Cooperfield', 'A Tale of Two Cities']\n}, {\n  name: 'William Shakespare',\n  imageUrl: 'images/authors/williamshakespare.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['Hamlet', 'Macbeth', 'Romeo and Juliet']\n}];\n\nfunction getTurnData(authors) {\n  // concatenating each author's books into the larger set\n  const allBooks = authors.reduce(function (p, c, i) {\n    return p.concat(c.books);\n  }, []); // ilk 4'ünü al\n\n  const fourRandomBooks = shuffle(allBooks).slice(0, 4);\n  const answer = sample(fourRandomBooks);\n  return {\n    books: fourRandomBooks,\n    author: authors.find(author => author.books.some(title => title === answer))\n  };\n}\n\nfunction resetState() {\n  return {\n    turnData: getTurnData(authors),\n    highlight: ''\n  };\n}\n\n;\n\nfunction reducer(state = {\n  authors,\n  turnData: getTurnData(authors),\n  highlight: ''\n}, action) {\n  switch (action.type) {\n    case 'ANSWER_SELECTED':\n      const isCorrect = state.turnData.author.books.some(book => book === action.book);\n      state.highlight = isCorrect ? 'correct' : 'wrong';\n      return Object.assign({}, state, {\n        highlight: isCorrect ? 'correct' : 'wrong'\n      });\n\n    case 'CONTINUE':\n      return Object.assign({}, state, {\n        highlight: '',\n        turnData: getTurnData(state.authors)\n      });\n    // if we dont know how to handle action, don't handle it at all \n\n    default:\n      return state;\n  }\n\n  return state;\n} // creating a store requires specifying a reducer function\n\n\nlet store = Redux.createStore(reducer);\n\nfunction onAnswerSelected(answer) {\n  const isCorrect = state.turnData.author.books.some(book => book === answer);\n  state.highlight = isCorrect ? 'correct' : 'wrong';\n  render();\n}\n\nfunction App() {\n  // Provider's job is make this store available for all of its children\n  return React.createElement(ReactRedux.Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(AuthorQuiz, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }));\n}\n\nconst AuthorWrapper = withRouter(({\n  history\n}) => React.createElement(AddAuthorForm, {\n  onAddAuthor: author => {\n    authors.push(author);\n    history.push('/');\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n}));\n\nfunction render() {\n  // BrowserRouter component gives us ability to introduce route components\n  // <React.Fragment> : added due to BrowserRouter only has one child element\n  // grouping react elements under a single parent but using a component that has no DOM representation\n  // this <React.Fragment> component doesn't add anything to the DOM\n  ReactDOM.render(React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: App,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/add\",\n    component: AuthorWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }))), document.getElementById('root'));\n}\n\nrender();\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/meltemayyildiz/jsdev/authorquiz/src/index.js"],"names":["React","ReactDOM","AuthorQuiz","serviceWorker","shuffle","sample","BrowserRouter","Route","withRouter","Redux","ReactRedux","AddAuthorForm","authors","name","imageUrl","imageSource","books","getTurnData","allBooks","reduce","p","c","i","concat","fourRandomBooks","slice","answer","author","find","some","title","resetState","turnData","highlight","reducer","state","action","type","isCorrect","book","Object","assign","store","createStore","onAnswerSelected","render","App","AuthorWrapper","history","push","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AuthorQuiz from './AuthorQuiz';\nimport * as serviceWorker from './serviceWorker';\nimport {shuffle, sample} from 'underscore';\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom';\nimport * as Redux from 'redux';\nimport * as ReactRedux from 'react-redux';\n// npm install redux react-redux\n\nimport AddAuthorForm from './AddAuthorForm';\n\nconst authors = [\n    {\n        name : 'Mark Twain',\n        imageUrl: 'images/authors/marktwain.jpg',\n        imageSource:'Wikimedia Commons',\n        books: ['The Adventures of Huckleberry Finn',\n                'Life on the Missisippi',\n                'Roughing it']\n    },\n    {\n        name : 'Joseph Conrad',\n        imageUrl: 'images/authors/marktwain.jpg',\n        imageSource:'Wikimedia Commons',\n        books: ['Hearth of Darkness']   \n    },\n    {\n        name : 'Stephen King',\n        imageUrl: 'images/authors/marktwain.jpg',\n        imageSource:'Wikimedia Commons',\n        books: ['The Shining', 'IT']   \n    },\n    {\n        name : 'Charles Dickens',\n        imageUrl: 'images/authors/marktwain.jpg',\n        imageSource:'Wikimedia Commons',\n        books: ['David Cooperfield', 'A Tale of Two Cities']   \n    },\n    {\n        name : 'William Shakespare',\n        imageUrl: 'images/authors/williamshakespare.jpg',\n        imageSource:'Wikimedia Commons',\n        books: ['Hamlet', 'Macbeth', 'Romeo and Juliet']   \n    },\n\n    //npm install underscore\n];\n\nfunction getTurnData(authors){\n    // concatenating each author's books into the larger set\n   const allBooks = authors.reduce(function(p, c, i){\n       return p.concat(c.books);\n   }, []);\n\n   // ilk 4'ünü al\n   const fourRandomBooks = shuffle(allBooks).slice(0,4);\n   const answer = sample(fourRandomBooks);\n\n   return{\n       books: fourRandomBooks,\n       author: authors.find((author) => \n           author.books.some((title) => \n                title === answer))\n   }\n}\n\nfunction resetState(){\n    return{\n    turnData: getTurnData(authors),\n    highlight: ''}\n};\n\nfunction reducer(state={authors, turnData:getTurnData(authors), highlight: ''}, action){\n   \n    switch(action.type){\n        case 'ANSWER_SELECTED':\n          const isCorrect = state.turnData.author.books.some((book) => book === action.book);\n          state.highlight = isCorrect ? 'correct' : 'wrong';\n          return Object.assign(\n              {},\n              state, {\n                  highlight: isCorrect ? 'correct' : 'wrong'});\n        case 'CONTINUE':\n           return Object.assign({}, state, {\n               highlight: '', \n               turnData: getTurnData(state.authors)\n            });\n            // if we dont know how to handle action, don't handle it at all \n        default: return state;\n    } \n   \n    return state;\n}\n\n// creating a store requires specifying a reducer function\nlet store = Redux.createStore(reducer);\n\nfunction onAnswerSelected(answer){\n   const isCorrect = state.turnData.author.books.some((book) => book === answer);\n   state.highlight = isCorrect ? 'correct' : 'wrong';\n   render();\n}\n\nfunction App(){\n    // Provider's job is make this store available for all of its children\n    return <ReactRedux.Provider store={store}>\n        <AuthorQuiz />\n    </ReactRedux.Provider>;\n}\n\n\nconst AuthorWrapper = withRouter(({history}) => \n     <AddAuthorForm onAddAuthor={(author) => {\n       authors.push(author);\n       history.push('/');\n   }}/>\n);\n\n\nfunction render(){\n    // BrowserRouter component gives us ability to introduce route components\n    // <React.Fragment> : added due to BrowserRouter only has one child element\n    // grouping react elements under a single parent but using a component that has no DOM representation\n    // this <React.Fragment> component doesn't add anything to the DOM\n  ReactDOM.render(\n  <BrowserRouter>\n    <React.Fragment>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/add\" component={AuthorWrapper}/>\n    </React.Fragment>\n  </BrowserRouter>, document.getElementById('root'));\n}\n\nrender();\n\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}